@host = http://localhost:3000

### GET all users
GET {{host}}/users

#### Assert
Status: 200
Content-Type: application/json
Body:
$[0].id: 1
$[0].name: John Doe
$[1].id: 2
$[1].name: Jane Smith

### GET user by ID
GET {{host}}/users/1

#### Assert: Check Headers
Status: 200
Content-Type: application/json

#### Assert: Check Body
Body:
$.id: 1
$.name: John Doe
$.email: john@example.com

### GET non-existent user
GET {{host}}/users/999
#### Assert
Status: 404
Content-Type: application/json
Body:
$.error: User not found

### POST new user
POST {{host}}/users
Content-Type: application/json

{
  "name": "Alice Johnson",
  "email": "alice@example.com"
}

#### Assert
Status: 201
Content-Type: application/json
Body:
$.name: Alice Johnson
$.email: alice@example.com

# 저장된 사용자 ID를 변수로 저장
@newUserId = $.id

### Verify new user added
GET {{host}}/users/{{newUserId}}

#### Assert
Status: 200
Content-Type: application/json
Body:
$.name: Alice Johnson
$.email: alice@example.com

### POST new post
POST {{host}}/posts
Content-Type: application/json

{
  "title": "New Post",
  "body": "This is a new post",
  "userId": {{newUserId}}
}

#### Assert
Status: 201
Content-Type: application/json
Body:
$.title: New Post
$.body: This is a new post
$.userId: {{newUserId}}

# 저장된 포스트 ID를 변수로 저장
@newPostId = $.id

### GET post comments (initially empty)
GET {{host}}/posts/{{newPostId}}/comments
#### Assert
Status: 200
Content-Type: application/json
Body: []

@host = http://localhost:3000

### Use a custom validation script
GET {{host}}/users/{{newUserId}}
#### Assert
Status: 200
Content-Type: application/json
_CustomAssert: ./custom-assert.js

### POST new user with invalid email
POST {{host}}/users
Content-Type: application/json

{
  "name": "Bob Smith",
  "email": "bob_at_example.com"  # Invalid email format
}

#### Assert
Status: 400

### GET non-existent post
GET {{host}}/posts/999

#### Assert
Status: 404
Content-Type: application/json
Body:
$.error: Post not found

### POST file upload
POST {{host}}/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="attchefile.data"
Content-Type: application/octet-stream

< ./attchefile.data
------WebKitFormBoundary7MA4YWxkTrZu0gW--

#### Assert
Status: 201

### POST form data
POST {{host}}/submitForm
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="name"

Alice Johnson
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="email"

alice@example.com
------WebKitFormBoundary7MA4YWxkTrZu0gW--

#### Assert
Status: 201
Content-Type: application/json
Body:
$.name: Alice Johnson
$.email: alice@example.com